name: CI/CD

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
jobs:
  test_web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run unittest on web
        run: echo "running unittest"

  test_server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v4
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          python-version: "3.10"
      - name: install dependencies
        run: |
          cd server
          poetry install --no-root --no-interaction --no-ansi
      - name: Run unittest on server
        run: |
          cd server
          poetry run ./scripts/unittest.sh

  test_share:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run unittest on share
        run: echo "running unittest"

  test_telegrambot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run unittest on telegram bot
        run: echo "running unittest"

  build_and_push_server:
    runs-on: ubuntu-latest
    needs: test_server
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Get Previous tag"
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server release
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./server
          target: prod
          file: ./server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/moviepediafilms/backend:${{ steps.previoustag.outputs.tag }}
            ghcr.io/moviepediafilms/backend:release

  build_and_push_web:
    runs-on: ubuntu-latest
    needs: test_web
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Get Previous tag"
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server release
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./web
          target: prod
          file: ./web/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/moviepediafilms/frontend:${{ steps.previoustag.outputs.tag }}
            ghcr.io/moviepediafilms/frontend:release

  build_and_push_share:
    runs-on: ubuntu-latest
    needs: test_share
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Get Previous tag"
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server release
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./share
          target: prod
          file: ./share/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/moviepediafilms/share-interceptor:${{ steps.previoustag.outputs.tag }}
            ghcr.io/
            /share-interceptor:release

  build_and_push_telegrambot:
    runs-on: ubuntu-latest
    needs: test_telegrambot
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Get Previous tag"
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server release
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./telegram-bot
          target: prod
          file: ./telegram-bot/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/moviepediafilms/telegram-bot:${{ steps.previoustag.outputs.tag }}
            ghcr.io/moviepediafilms/telegram-bot:release
